<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java</title>
    <link href="/2021/06/11/java/"/>
    <url>/2021/06/11/java/</url>
    
    <content type="html"><![CDATA[<h1 id="Java学习"><a href="#Java学习" class="headerlink" title="Java学习"></a>Java学习</h1><h2 id="一、运行第一个Hello-word！"><a href="#一、运行第一个Hello-word！" class="headerlink" title="一、运行第一个Hello,word！"></a>一、运行第一个Hello,word！</h2><ol><li><p>配置安装完环境（检查是否安装成功 用 java -version,推荐使用jdk8.0）。</p></li><li><p>创建一个后缀为java的文件</p></li><li><p>编写如下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        System.out.print(<span class="hljs-string">&quot;Hello,word!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>编译.java 文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">javac Hello.java<br></code></pre></td></tr></table></figure></li><li><p>运行编译后的文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">java Hello<br></code></pre></td></tr></table></figure></li></ol><h2 id="二、语法"><a href="#二、语法" class="headerlink" title="二、语法"></a>二、语法</h2><ol><li><p>注释 <em>书写注释是一个非常好的习惯</em></p><ul><li><p>单行注释<code>//</code></p></li><li><p>多行注释<code>/*  */</code></p></li><li><p>文档注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span> HelloWord</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span> java文档注释</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>标识符</p><ul><li>不能用关键字</li></ul><p><img src="F:\笔记\static\image-20210418145806181.png" alt="关键字"></p><ul><li>所有的标识符都应该是以字母<code>（A-Z）</code>|| <code>（a-z）</code>|| <code>$</code> || <code>_</code> 开始</li><li>标识符大小写敏感、<del><em>可以用中文来命名，但是不推荐</em></del></li></ul></li><li><p>数据类型</p><ul><li><p>强类型语言</p></li><li><p>要求变量的使用要严格符合规定，所有变量都必须先定义后在使用。</p></li><li><p>弱类型语言</p></li><li><p>Java的数据类型</p><ul><li><p>整数类型【byte(-128-127)、short(-32768-32767)、<strong>int</strong>(-2147483648-2147483647)、long（<strong>该类型后面加l</strong>）】</p></li><li><p>浮点类型【float<em>长度可参考整数-int</em>(<em>该类型后面加f</em>)、double <em>长度可参考整数-long</em>】 </p></li><li><p>字符类型（char单个字符）</p></li><li><p>字符串类型(String 多个字符 – 是一个类)</p></li><li><p>布尔类型（boolean）值只有true 和false</p></li><li><p>类 、 接口 、数组</p></li><li><p>```java<br> boolean a = true; // 布尔值 值只有true 和false<br> byte c = 100;    //长度 -128-127<br> short d = 10000;  // 长度-32768-32767<br> int b = 1000000000;//整形 常用长度<br> long  e = 10000000000000L; //整形最大长度定义  （后面加L）<br> float f = 1.1F; //浮点型  对应长度为整形的 int（后面加F）<br> double g = 1.352; //浮点型 对应长度为整形的long<br> char h = ‘A’; //单字符类型 用单引号<br> String j = “ABDS”; //字符串类型 用 双引号</p><p> //进制类型声明<br> int i  = 10; //10进制<br> int i2 = 010; //8进制<br> int i3 = 0x10; //16进制</p><p> //浮点拓展<br> //不用浮点型来判断</p><p> //字符扩展<br> char c1= ‘a’;<br> char c2= ‘中’;<br> //所有的字符本质都是数字 可以用(int)强制类型转换</p><p>//像money之类的数值计算（比较大的）<br>int money1 = 2000000;<br>int days   = 200;<br>System.out.println(money1 * (long)days); //如果数值较大会计算溢出</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><br><span class="hljs-number">4.</span> 变量<br>   - 变量就是可以变化的量。<br><br>   - Java是强类型语言,每个变量都必须声明类型<br><br>   - 每个变量都有类型，类型可以是基本类型也可以是引用类型（<span class="hljs-keyword">String</span> chart = <span class="hljs-string">&quot;我的&quot;</span>）<br><br>   - 分为类变量、实例变量、局部变量  <br><br>     - 局部变量必须声明和赋值<br>     - 类变量是在类里面方法外面声明的（加<span class="hljs-keyword">static</span>）   <span class="hljs-comment">//类方法里面可以直接访问</span><br>     - 实例变量是在类里面方法外面声明的（不加<span class="hljs-keyword">static</span>） <span class="hljs-comment">//需要实例化类来访问</span><br><br>   - 示例代码<br><br>      ```java<br>       <span class="hljs-keyword">public</span> class Demo02 &#123;<br>           <span class="hljs-comment">//类变量</span><br>           <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> salary = <span class="hljs-number">2500</span>; <span class="hljs-comment">//类内部可以直接访问</span><br>       <br>           <span class="hljs-comment">//实例变量</span><br>           <span class="hljs-comment">//除了基本类型其它默认值都为null</span><br>           <span class="hljs-keyword">String</span> name; <span class="hljs-comment">//字符串类型-默认值为null</span><br>           <span class="hljs-keyword">int</span> age;  <span class="hljs-comment">//整数类型-默认值为0</span><br>           <span class="hljs-keyword">boolean</span> xieyi; <span class="hljs-comment">//boolean 默认值为false</span><br>           <span class="hljs-comment">/*</span><br><span class="hljs-comment">           main 方法</span><br><span class="hljs-comment">           */</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>       <br>               <span class="hljs-comment">//局部变量 : 必须声明和赋值才能使用</span><br>               <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br>               System.out.<span class="hljs-built_in">println</span>(a);<br>               <br>               <span class="hljs-comment">//获取实例变量的方式</span><br>               <span class="hljs-comment">//变量类型  变量名</span><br>               Demo02 demo02 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Demo02</span>();<br>               System.out.<span class="hljs-built_in">println</span>(demo02.age);<br>           &#125;<br>           <span class="hljs-comment">//其他方法</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">()</span></span>&#123;<br>       System.out.<span class="hljs-built_in">println</span>(salary); <span class="hljs-comment">//访问类变量 ;</span><br>           &#125;<br>       &#125;<br>       <br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>常量</p></li></ol><ul><li>final 常量名 = 常量值</li></ul><ol start="6"><li><p>变量、常量命名规范</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 变量的命名规范</span><br><span class="hljs-comment"> * 1.所有的方法、类名、变量见名知意</span><br><span class="hljs-comment">    * 2.类成员变量：小驼峰命名法 如 userName</span><br><span class="hljs-comment">    * 3.局部变量：小驼峰命名法</span><br><span class="hljs-comment">    * 4.常量：大写字母加下划线 如 USER_NAME</span><br><span class="hljs-comment">    * 5.类名：大驼峰 如 UserModel</span><br><span class="hljs-comment">    * 6.方法名：小驼峰命名法</span><br><span class="hljs-comment">    */</span><br></code></pre></td></tr></table></figure></li><li><p>运算符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java">      <span class="hljs-comment">//如果没有long的时候结果都为int</span><br>      <span class="hljs-comment">//如果又double 结果肯定为double</span><br>      <span class="hljs-comment">//+如果两边有字符类型则为字符类型</span><br><span class="hljs-comment">//关系运算符的结果一定是布尔值</span><br>      <span class="hljs-comment">//逻辑运算符的  || &amp;&amp;</span><br>   <br>      <span class="hljs-comment">//位运算</span><br>      <span class="hljs-comment">/**</span><br><span class="hljs-comment">       *  A = 0011 1100</span><br><span class="hljs-comment">       *  B = 0000 1101</span><br><span class="hljs-comment">       * -- -- -- -- -- --</span><br><span class="hljs-comment">       * A&amp;B 两边都为1 则为1  结果为（0000 1100）</span><br><span class="hljs-comment">       * A|B 有一边为1 则为1  结果为（0011 1101）</span><br><span class="hljs-comment">       * A^B 两边都为0或者一边为1就是0 否则为1  结果为（0011 0001）</span><br><span class="hljs-comment">       * A~B 两边都为0或者一边为1就是1 否则为0   结果为（1100 1110）</span><br><span class="hljs-comment">       */</span><br>   <br>      <span class="hljs-comment">//位运算</span><br>      <span class="hljs-keyword">int</span> a = <span class="hljs-number">2</span>;<br>      System.out.println(a&lt;&lt;<span class="hljs-number">1</span>);<br>      <span class="hljs-comment">// &lt;&lt; *2</span><br>      <span class="hljs-comment">// &gt;&gt; /2</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown</title>
    <link href="/2021/06/11/markdown/"/>
    <url>/2021/06/11/markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="MarkDown学习"><a href="#MarkDown学习" class="headerlink" title="MarkDown学习"></a>MarkDown学习</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>‘ #*n ’加空格 为标题 最多到6级标题，即（###### 标题内容）</p><p><code>#加空格</code></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><strong>要加粗的文本</strong>  <code>**文本**</code> </p><p><em>要倾斜的文本</em> <code>*文本*</code></p><p><em><strong>要加粗并且倾斜的文本</strong></em> <code>***文本***</code></p><p><del>要删除线的文本</del>    <code>~~文本~~</code>  </p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>  （ &gt;加空格 ）</p></blockquote><p><code>&gt; 空格</code></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><p><code>---</code></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/d035636439bb6123a1da4231fd817c30.png" alt="图片alt"></p><p><code>![图片alt](图片链接)</code> </p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://baidu.com/">点击跳转到Baidu</a></p><p><code>[链接文本](链接地址)</code></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><code>-空格</code>  无序列表</p><p><code>1.空格</code>有序列表</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<br>|<span class="hljs-string"> ---- </span>|<span class="hljs-string"> ---- </span>|<span class="hljs-string"> ---- </span>|<br>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<br>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<br>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<span class="hljs-string">      </span>|<br></code></pre></td></tr></table></figure><p>typora  快捷键 <code>ctrl+t</code></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2> <figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-string">``</span><span class="hljs-string">`代码`</span><span class="hljs-string">``</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/11/thinkphp/"/>
    <url>/2021/06/11/thinkphp/</url>
    
    <content type="html"><![CDATA[<h2 id="php端-微信支付的异步通知获取-amp-解析-amp-回调结果通知"><a href="#php端-微信支付的异步通知获取-amp-解析-amp-回调结果通知" class="headerlink" title="php端-微信支付的异步通知获取&amp;解析&amp;回调结果通知"></a>php端-微信支付的异步通知获取&amp;解析&amp;回调结果通知</h2><p>​    </p><h3 id="获取微信返回的数据"><a href="#获取微信返回的数据" class="headerlink" title="获取微信返回的数据"></a>获取微信返回的数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">file_get_contents(<span class="hljs-string">&quot;php://input&quot;</span>);<br></code></pre></td></tr></table></figure><h4 id="微信支付通知结果的参数字典"><a href="#微信支付通知结果的参数字典" class="headerlink" title="微信支付通知结果的参数字典"></a>微信支付通知结果的参数字典</h4><blockquote><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_7">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_7</a></p></blockquote><h4 id="获取的通知数据转换为Array"><a href="#获取的通知数据转换为Array" class="headerlink" title="获取的通知数据转换为Array"></a>获取的通知数据转换为Array</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">xmlToArray</span>(<span class="hljs-params"><span class="hljs-variable">$xml</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span>&#123;<br>  <span class="hljs-variable">$temp</span>  = json_encode(simplexml_load_string(<span class="hljs-variable">$xml</span>, <span class="hljs-string">&#x27;SimpleXMLElement&#x27;</span>, LIBXML_NOCDATA));<br>  <span class="hljs-keyword">return</span> json_decode(<span class="hljs-variable">$temp</span>, <span class="hljs-literal">true</span>);<br>&#125;<br><span class="hljs-variable">$testxml</span>  = file_get_contents(<span class="hljs-string">&quot;php://input&quot;</span>);<br><span class="hljs-variable">$jsonxml</span> = json_encode(simplexml_load_string(<span class="hljs-variable">$testxml</span>, <span class="hljs-string">&#x27;SimpleXMLElement&#x27;</span>, LIBXML_NOCDATA));<br><span class="hljs-variable">$result</span> = json_decode(<span class="hljs-variable">$jsonxml</span>, <span class="hljs-literal">true</span>);<span class="hljs-comment">//转成数组，</span><br></code></pre></td></tr></table></figure><h4 id="在回调里面给微信通知-回调成功"><a href="#在回调里面给微信通知-回调成功" class="headerlink" title="在回调里面给微信通知-回调成功"></a>在回调里面给微信通知-回调成功</h4>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;xml&gt;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&lt;/xml&gt;&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="数组转xml"><a href="#数组转xml" class="headerlink" title="数组转xml"></a>数组转xml</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">arrayToXml</span>(<span class="hljs-params"><span class="hljs-variable">$arr</span></span>) </span>&#123;<br>    <span class="hljs-variable">$xml</span> = <span class="hljs-string">&quot;&lt;xml&gt;&quot;</span>;<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$arr</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$val</span>)&#123;<br>        <span class="hljs-keyword">if</span> (is_numeric(<span class="hljs-variable">$val</span>))&#123;<br>            <span class="hljs-variable">$xml</span>.=<span class="hljs-string">&quot;&lt;<span class="hljs-subst">$key</span>&gt;<span class="hljs-subst">$val</span>&lt;/<span class="hljs-subst">$key</span>&gt;&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-variable">$xml</span>.=<span class="hljs-string">&quot;&lt;<span class="hljs-subst">$key</span>&gt;&lt;![CDATA[<span class="hljs-subst">$val</span>]]&gt;&lt;/<span class="hljs-subst">$key</span>&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-variable">$xml</span>.=<span class="hljs-string">&quot;&lt;/xml&gt;&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$xml</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="php-测试微信回调方法"><a href="#php-测试微信回调方法" class="headerlink" title="php 测试微信回调方法"></a>php 测试微信回调方法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">       <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pay</span>(<span class="hljs-params">Request <span class="hljs-variable">$rst</span></span>)</span>&#123;<br><span class="hljs-variable">$url</span>= <span class="hljs-string">&#x27;http://xxx.com/index/pay/payNotify&#x27;</span>;  <span class="hljs-comment">//你的微信支付回调域名</span><br><span class="hljs-variable">$ch</span> = curl_init(<span class="hljs-variable">$url</span>);<br>curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_CUSTOMREQUEST, <span class="hljs-string">&quot;POST&quot;</span>);<br>curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_POSTFIELDS,<span class="hljs-string">&#x27;你的XML数据（从第一次支付成功保存到数据库或者日志里查看&#x27;</span>);<br>curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER,<span class="hljs-literal">true</span>);<br>curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;Content-Type:text/xml; charset=utf-8&quot;</span>));<br><span class="hljs-variable">$result</span> = curl_exec(<span class="hljs-variable">$ch</span>);   <span class="hljs-comment">// 抓取URL并把它传递给浏览器</span><br><span class="hljs-keyword">exit</span>(<span class="hljs-variable">$result</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="微信支付返回参数之后需要重新签名计算"><a href="#微信支付返回参数之后需要重新签名计算" class="headerlink" title="微信支付返回参数之后需要重新签名计算"></a>微信支付返回参数之后需要重新签名计算</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$appId</span> = <span class="hljs-variable">$result</span>[<span class="hljs-string">&#x27;appid&#x27;</span>];<br><span class="hljs-variable">$nonceStr</span> = <span class="hljs-variable">$result</span>[<span class="hljs-string">&#x27;nonce_str&#x27;</span>];<br><span class="hljs-variable">$prepay_id</span> = <span class="hljs-variable">$result</span>[<span class="hljs-string">&#x27;prepay_id&#x27;</span>];<br><span class="hljs-variable">$timeStamp</span> = time();<br><span class="hljs-variable">$key</span> =  env(<span class="hljs-string">&#x27;WXPAY_KEY&#x27;</span>);<br><span class="hljs-variable">$paySign</span> = md5(<span class="hljs-string">&quot;appId=<span class="hljs-subst">$appId</span>&amp;nonceStr=<span class="hljs-subst">$nonceStr</span>&amp;package=prepay_id=<span class="hljs-subst">$prepay_id</span>&amp;signType=MD5&amp;timeStamp=<span class="hljs-subst">$timeStamp</span>&amp;key=<span class="hljs-subst">$key</span>&quot;</span>);<br><span class="hljs-variable">$json</span> = [<br>    <span class="hljs-string">&#x27;nonceStr&#x27;</span> =&gt; <span class="hljs-variable">$nonceStr</span>,<br>    <span class="hljs-string">&#x27;prepay_id&#x27;</span> =&gt; <span class="hljs-variable">$prepay_id</span>,<br>    <span class="hljs-string">&#x27;timeStamp&#x27;</span> =&gt; strval(<span class="hljs-variable">$timeStamp</span>), <span class="hljs-comment">// 小程序支付的timeStamp参数，必须使用这个 timeStamp，因为他已经被计算到了paySign中</span><br>    <span class="hljs-string">&#x27;paySign&#x27;</span> =&gt; <span class="hljs-variable">$paySign</span>,<br>    <span class="hljs-string">&#x27;signType&#x27;</span> =&gt; <span class="hljs-string">&#x27;MD5&#x27;</span><br>];<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uniapp</title>
    <link href="/2021/06/11/uniapp/"/>
    <url>/2021/06/11/uniapp/</url>
    
    <content type="html"><![CDATA[<h2 id="uniapp使用vuex、使用vuex-persistedstate"><a href="#uniapp使用vuex、使用vuex-persistedstate" class="headerlink" title="uniapp使用vuex、使用vuex-persistedstate"></a>uniapp使用vuex、使用vuex-persistedstate</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vuex&#x27;</span>;<br><span class="hljs-keyword">import</span> createPersistedState <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex-persistedstate&quot;</span><br>Vue.use(Vuex)<br><br><span class="hljs-keyword">const</span> getDefaultState = <span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./states&#x27;</span>);<br>&#125;<br><br><br><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br><span class="hljs-attr">plugins</span>: [createPersistedState(&#123;<br><span class="hljs-attr">storage</span>: &#123;<br><span class="hljs-attr">getItem</span>: <span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> uni.getStorageSync(key),<br><span class="hljs-attr">setItem</span>: <span class="hljs-function">(<span class="hljs-params">key, value</span>) =&gt;</span> uni.setStorageSync(key, value),<br><span class="hljs-attr">removeItem</span>: <span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> uni.removeStorageSync(key)<br>&#125;,<br>&#125;)],<br><span class="hljs-attr">state</span>:getDefaultState(),<br><span class="hljs-attr">mutations</span>:&#123;<br><span class="hljs-attr">save</span>: <span class="hljs-function">(<span class="hljs-params">state,[key,value]</span>)=&gt;</span>&#123;<br>state[key] = value;<br>&#125;,<br><span class="hljs-attr">del</span>: <span class="hljs-function">(<span class="hljs-params">state, key</span>) =&gt;</span> &#123;<br>state[key] = <span class="hljs-literal">null</span><br>&#125;,<br>&#125;,<br><span class="hljs-attr">getters</span>:&#123;<br><br>&#125;,<br><span class="hljs-attr">actions</span>:&#123;<br><span class="hljs-function"><span class="hljs-title">save</span>(<span class="hljs-params">&#123; commit &#125;, arr</span>)</span> &#123;<br>commit(<span class="hljs-string">&#x27;save&#x27;</span>, arr)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">del</span>(<span class="hljs-params">&#123; commit &#125;, key</span>)</span> &#123;<br>commit(<span class="hljs-string">&#x27;del&#x27;</span>, key)<br>&#125;,<br>&#125;,<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;<br><br></code></pre></td></tr></table></figure><h2 id="uniapp-编译注意事项"><a href="#uniapp-编译注意事项" class="headerlink" title="uniapp 编译注意事项"></a>uniapp 编译注意事项</h2><h3 id="一、Android"><a href="#一、Android" class="headerlink" title="一、Android"></a>一、Android</h3><ol><li>安卓手机开启调式模式（开启开发者模式 设置开启调试模式）</li><li>用hbuilder点击运行-&gt;运行到手机或模拟器-&gt;选择手机运行</li></ol><h3 id="二、IOS"><a href="#二、IOS" class="headerlink" title="二、IOS"></a>二、IOS</h3><ol><li>安装iTunes成功链接到设备</li><li>安装iTools 安装ios驱动</li><li>用hbuilder点击运行-&gt;运行到手机或模拟器-&gt;选择手机运行</li><li>到手机设置-&gt;通用-&gt;信任该设备</li></ol><h2 id="UNIAPP-修改上个页面数据"><a href="#UNIAPP-修改上个页面数据" class="headerlink" title="UNIAPP 修改上个页面数据"></a>UNIAPP 修改上个页面数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> pages = getCurrentPages();<br><span class="hljs-keyword">let</span> page = pages[pages.length - <span class="hljs-number">2</span>];<br><br>page.$vm.变量名 = 变量值;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>uniapp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
